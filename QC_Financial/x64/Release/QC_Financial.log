Build started 01/06/2018 20:23:21.
     1>Project "\\psf\Home\Documents\qcode\QCDValuationEngine\QC_Financial\QC_Financial.vcxproj" on node 2 (Build target(s)).
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\x86_amd64\CL.exe /c /Zi /nologo /W3 /WX- /O2 /Oi /GL /D WIN32 /D NDEBUG /D _WINDOWS /D _USRDLL /D QC_FINANCIAL_EXPORTS /D _WINDLL /D _UNICODE /D UNICODE /Gm- /EHsc /MD /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Fo"x64\Release\\" /Fd"x64\Release\vc120.pdb" /Gd /TP /errorReport:prompt main.cpp
         main.cpp
     1>C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/detail/caller.hpp(53): warning C4244: 'return' : conversion from 'Py_ssize_t' to 'unsigned int', possible loss of data
     1>\\Mac\Home\Documents\qcode\QCDValuationEngine\QC_DVE_CORE\include\PresentValue.h(161): warning C4267: 'argument' : conversion from 'size_t' to 'unsigned int', possible loss of data
     1>C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/vector_indexing_suite.hpp(176): warning C4267: '+=' : conversion from 'size_t' to 'long', possible loss of data
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/vector_indexing_suite.hpp(170) : while compiling class template member function 'unsigned __int64 boost::python::vector_indexing_suite<std::vector<double,std::allocator<_Ty>>,false,boost::python::detail::final_vector_derived_policies<Container,false>>::convert_index(Container &,PyObject *)'
                 with
                 [
                     _Ty=double
         ,            Container=std::vector<double,std::allocator<double>>
                 ]
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/indexing_suite.hpp(229) : see reference to function template instantiation 'unsigned __int64 boost::python::vector_indexing_suite<std::vector<double,std::allocator<_Ty>>,false,boost::python::detail::final_vector_derived_policies<Container,false>>::convert_index(Container &,PyObject *)' being compiled
                 with
                 [
                     _Ty=double
         ,            Container=std::vector<double,std::allocator<double>>
                 ]
                 main.cpp(313) : see reference to class template instantiation 'boost::python::vector_indexing_suite<std::vector<double,std::allocator<_Ty>>,false,boost::python::detail::final_vector_derived_policies<Container,false>>' being compiled
                 with
                 [
                     _Ty=double
         ,            Container=std::vector<double,std::allocator<double>>
                 ]
     1>C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/detail/indexing_suite_detail.hpp(605): warning C4267: '+=' : conversion from 'size_t' to 'long', possible loss of data
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/detail/indexing_suite_detail.hpp(590) : while compiling class template member function 'void boost::python::detail::slice_helper<Container,DerivedPolicies,boost::python::detail::no_proxy_helper<Container,DerivedPolicies,boost::python::detail::container_element<Container,Index,DerivedPolicies>,Index>,Data,Index>::base_get_slice_data(Container &,PySliceObject *,Index &,Index &)'
                 with
                 [
                     Container=std::vector<double,std::allocator<double>>
         ,            DerivedPolicies=boost::python::detail::final_vector_derived_policies<std::vector<double,std::allocator<double>>,false>
         ,            Index=unsigned __int64
         ,            Data=double
                 ]
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/detail/indexing_suite_detail.hpp(583) : see reference to function template instantiation 'void boost::python::detail::slice_helper<Container,DerivedPolicies,boost::python::detail::no_proxy_helper<Container,DerivedPolicies,boost::python::detail::container_element<Container,Index,DerivedPolicies>,Index>,Data,Index>::base_get_slice_data(Container &,PySliceObject *,Index &,Index &)' being compiled
                 with
                 [
                     Container=std::vector<double,std::allocator<double>>
         ,            DerivedPolicies=boost::python::detail::final_vector_derived_policies<std::vector<double,std::allocator<double>>,false>
         ,            Index=unsigned __int64
         ,            Data=double
                 ]
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/indexing_suite.hpp(206) : see reference to class template instantiation 'boost::python::detail::slice_helper<Container,DerivedPolicies,boost::python::detail::no_proxy_helper<Container,DerivedPolicies,boost::python::detail::container_element<Container,Index,DerivedPolicies>,Index>,Data,Index>' being compiled
                 with
                 [
                     Container=std::vector<double,std::allocator<double>>
         ,            DerivedPolicies=boost::python::detail::final_vector_derived_policies<std::vector<double,std::allocator<double>>,false>
         ,            Index=unsigned __int64
         ,            Data=double
                 ]
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/indexing_suite.hpp(204) : while compiling class template member function 'boost::python::api::object boost::python::indexing_suite<Container,DerivedPolicies,false,false,double,unsigned __int64,double>::base_get_item(boost::python::back_reference<Container &>,PyObject *)'
                 with
                 [
                     Container=std::vector<double,std::allocator<double>>
         ,            DerivedPolicies=boost::python::detail::final_vector_derived_policies<std::vector<double,std::allocator<double>>,false>
                 ]
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/indexing_suite.hpp(187) : see reference to function template instantiation 'boost::python::api::object boost::python::indexing_suite<Container,DerivedPolicies,false,false,double,unsigned __int64,double>::base_get_item(boost::python::back_reference<Container &>,PyObject *)' being compiled
                 with
                 [
                     Container=std::vector<double,std::allocator<double>>
         ,            DerivedPolicies=boost::python::detail::final_vector_derived_policies<std::vector<double,std::allocator<double>>,false>
                 ]
                 C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/vector_indexing_suite.hpp(50) : see reference to class template instantiation 'boost::python::indexing_suite<Container,DerivedPolicies,false,false,double,unsigned __int64,double>' being compiled
                 with
                 [
                     Container=std::vector<double,std::allocator<double>>
         ,            DerivedPolicies=boost::python::detail::final_vector_derived_policies<std::vector<double,std::allocator<double>>,false>
                 ]
     1>C:\boost_1_65_1\build\include\boost-1_65_1\boost/python/suite/indexing/detail/indexing_suite_detail.hpp(619): warning C4267: '+=' : conversion from 'size_t' to 'long', possible loss of data
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\x86_amd64\link.exe /ERRORREPORT:PROMPT /OUT:"\\psf\Home\Documents\qcode\QCDValuationEngine\x64\Release\QC_Financial.pyd" /INCREMENTAL:NO /NOLOGO /LIBPATH:"C:\boost_1_67_0\lib64-msvc-12.0" kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"\\psf\Home\Documents\qcode\QCDValuationEngine\x64\Release\QC_Financial.pdb" /SUBSYSTEM:WINDOWS /OPT:REF /OPT:ICF /LTCG /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"\\psf\Home\Documents\qcode\QCDValuationEngine\x64\Release\QC_Financial.lib" /MACHINE:X64 /DLL x64\Release\FixedRateCashflow.obj
         x64\Release\IborCashflow.obj
         x64\Release\IcpClfCashflow.obj
         x64\Release\IcpClpCashflow.obj
         x64\Release\InterestRateIndex.obj
         x64\Release\Leg.obj
         x64\Release\LegFactory.obj
         x64\Release\QC30360.obj
         x64\Release\QCAct360.obj
         x64\Release\QCAct365.obj
         x64\Release\QCActAct.obj
         x64\Release\QCBusinessCalendar.obj
         x64\Release\QCCompoundWf.obj
         x64\Release\QCContinousWf.obj
         x64\Release\QCDate.obj
         x64\Release\QCHelperFunctions.obj
         x64\Release\QCInterestRate.obj
         x64\Release\QCInterestRatePeriodsFactory.obj
         x64\Release\QCLinearWf.obj
         x64\Release\QCWealthFactor.obj
         x64\Release\SimpleCashflow.obj
         x64\Release\SimpleMultiCurrencyCashflow.obj
         x64\Release\Tenor.obj
         x64\Release\main.obj
         x64\Release\QCAct30.obj
         x64\Release\QCInterpolator.obj
         x64\Release\QCLinearInterpolator.obj
         x64\Release\ZeroCouponCurve.obj
            Creating library \\psf\Home\Documents\qcode\QCDValuationEngine\x64\Release\QC_Financial.lib and object \\psf\Home\Documents\qcode\QCDValuationEngine\x64\Release\QC_Financial.exp
         Generating code
         Finished generating code
         QC_Financial.vcxproj -> \\psf\Home\Documents\qcode\QCDValuationEngine\x64\Release\QC_Financial.pyd
     1>Done Building Project "\\psf\Home\Documents\qcode\QCDValuationEngine\QC_Financial\QC_Financial.vcxproj" (Build target(s)).

Build succeeded.

Time Elapsed 00:00:52.25
